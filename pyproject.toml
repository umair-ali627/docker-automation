[tool.poetry]
name = "fastapi-boilerplate"
version = "0.1.0"
description = "A fully Async FastAPI boilerplate using SQLAlchemy and Pydantic 2"
authors = ["Igor Magalhaes <igor.magalhaes.r@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
python-dotenv = "^1.0.0"
pydantic = { extras = ["email"], version = "^2.6.1" }
fastapi = "^0.109.1"
uvicorn = "^0.27.0"
uvloop = "^0.19.0"
httptools = "^0.6.1"
uuid = "^1.30"
alembic = "^1.13.1"
asyncpg = "^0.29.0"
SQLAlchemy-Utils = "^0.41.1"
python-jose = "^3.3.0"
SQLAlchemy = "^2.0.25"
pytest = "^7.4.2"
python-multipart = "0.0.19"
greenlet = "^2.0.2"
httpx = "^0.28.1"
pydantic-settings = "^2.0.3"
redis = "^5.0.1"
arq = "^0.25.0"
gunicorn = "^22.0.0"
bcrypt = "^4.1.1"
fastcrud = "0.15.7"
livekit = "0.21.3"
livekit-agents="0.12.19"
livekit-api="0.8.2"
livekit-plugins-deepgram="0.7.2"
livekit-plugins-openai="0.12.3"
livekit-plugins-anthropic="0.2.13"
livekit-plugins-google="0.11.2"
livekit-plugins-silero="0.7.5"
livekit-plugins-elevenlabs="0.8.1"
livekit-plugins-cartesia="0.4.11"
livekit-plugins-playai="1.0.9"
livekit-plugins-rime="0.2.2"
livekit-plugins-neuphonic="0.1.1"
livekit-plugins-assemblyai="0.2.3"
livekit-plugins-speechmatics="0.0.2"
livekit-plugins-rag="0.2.4"
livekit-protocol="0.9.2"
livekit-plugins-turn-detector="0.4.3"
openai="1.68.2"
llama-index="0.12.15"
llama-parse="0.5.20"
qdrant-client="1.13.2"
aiohttp ="3.11.11"
pydub="0.25.1"
aiofiles="24.1.0"
boto3="1.36.5"
pycparser="2.22"
websockets="13.1"
schedule="1.2.2"
stripe = "^12.0.0"
fastapi-sso = "^0.17.0"
psycopg2-binary = "^2.9.10"
platformdirs = "4.3.7"
langchain = "0.3.23"
langchain-community = "0.3.21"
langchain-core = "0.3.55"
langchain-text-splitters = "0.3.8"
langsmith = "0.3.32"
livekit-plugins-uplift = "0.1.4"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true
select = [
    # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "F", # Pyflakes
    # https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "E", # pycodestyle
    "W", # Warning
    # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    # https://docs.astral.sh/ruff/rules/#mccabe-c90
    "C", # Complexity (mccabe+) & comprehensions
    # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "UP", # pyupgrade
    # https://docs.astral.sh/ruff/rules/#isort-i
    "I", # isort
]
ignore = [
    # https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "E402", # module level import not at top of file
    # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "UP006", # use-pep585-annotation
    "UP007", # use-pep604-annotation
    "E741",  # Ambiguous variable name
    # "UP035", # deprecated-assertion
]
[tool.ruff.per-file-ignores]
"__init__.py" = [
    "F401", # unused import
    "F403", # star imports
]

[tool.ruff.mccabe]
max-complexity = 24

[tool.ruff.pydocstyle]
convention = "numpy"
