name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Stop and remove old container if exists
            docker stop fastapi-container || true
            docker rm fastapi-container || true

            # Start Redis if not running
            if [ "$(docker ps -q -f name=redis)" = "" ]; then
              if [ "$(docker ps -aq -f status=exited -f name=redis)" != "" ]; then
                docker start redis
              else
                docker run -d --name redis -p 6379:6379 redis:7
              fi
            fi

            # Write .env file from GitHub secret
            echo "${{ secrets.ENV_FILE }}" > .env

            # Pull latest image
            docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

            # Run app container with env and Redis connection
            docker run -d --name fastapi-container \
              --env-file .env \
              -e REDIS_QUEUE_HOST=redis \
              -e REDIS_QUEUE_PORT=6379 \
              -p 8888:8888 \
              --network bridge \
              ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
