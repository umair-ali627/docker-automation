"""Initial tables

Revision ID: 135ab6251787
Revises: 
Create Date: 2025-08-15 17:07:53.672040

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '135ab6251787'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_reference_lookup',
    sa.Column('roomid', sa.UUID(), nullable=False),
    sa.Column('agentid', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tier',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('rate_limit',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tier_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('limit', sa.Integer(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tier_id'], ['tier.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_rate_limit_tier_id'), 'rate_limit', ['tier_id'], unique=False)
    op.create_table('user',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('profile_image_url', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('tier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tier_id'], ['tier.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_is_deleted'), 'user', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_user_tier_id'), 'user', ['tier_id'], unique=False)
    op.create_table('agent_profiles',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('system_prompt', sa.Text(), nullable=False),
    sa.Column('greeting', sa.String(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('llm_provider', sa.Enum('OPENAI', 'GOOGLE', name='llmprovider'), nullable=False),
    sa.Column('tts_provider', sa.Enum('OPENAI', 'GOOGLE', 'UPLIFT', 'ELEVENLABS', name='ttsprovider'), nullable=False),
    sa.Column('stt_provider', sa.Enum('DEEPGRAM', 'OPENAI', 'GOOGLE', name='sttprovider'), nullable=False),
    sa.Column('llm_options', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('tts_options', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('stt_options', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('allow_interruptions', sa.Boolean(), nullable=False),
    sa.Column('profile_options', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('interrupt_speech_duration', sa.Float(), nullable=False),
    sa.Column('interrupt_min_words', sa.Integer(), nullable=False),
    sa.Column('min_endpointing_delay', sa.Float(), nullable=False),
    sa.Column('max_endpointing_delay', sa.Float(), nullable=False),
    sa.Column('max_nested_function_calls', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_profiles_name'), 'agent_profiles', ['name'], unique=False)
    op.create_table('function_tools',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('base_url', sa.String(), nullable=False),
    sa.Column('endpoint_path', sa.String(), nullable=False),
    sa.Column('function_name', sa.String(), nullable=False),
    sa.Column('function_description', sa.Text(), nullable=False),
    sa.Column('http_method', sa.String(), nullable=False),
    sa.Column('headers', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('parameter_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('request_template', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('auth_required', sa.Boolean(), nullable=False),
    sa.Column('auth_type', sa.String(), nullable=True),
    sa.Column('response_mapping', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('error_mapping', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_function_tools_name'), 'function_tools', ['name'], unique=False)
    op.create_table('knowledge_bases',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('qdrant_collection', sa.String(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_bases_name'), 'knowledge_bases', ['name'], unique=False)
    op.create_table('post',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=30), nullable=False),
    sa.Column('text', sa.String(length=63206), nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('media_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id', 'uuid'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_post_created_by_user_id'), 'post', ['created_by_user_id'], unique=False)
    op.create_index(op.f('ix_post_is_deleted'), 'post', ['is_deleted'], unique=False)
    op.create_table('sip_trunks',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('trunk_type', sa.Enum('INBOUND', 'OUTBOUND', name='siptrunktype'), nullable=False),
    sa.Column('trunk_id', sa.String(), nullable=False),
    sa.Column('sip_termination_uri', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sip_trunks_name'), 'sip_trunks', ['name'], unique=False)
    op.create_index(op.f('ix_sip_trunks_phone_number'), 'sip_trunks', ['phone_number'], unique=False)
    op.create_table('agent_function_mappings',
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('function_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_profiles.id'], ),
    sa.ForeignKeyConstraint(['function_id'], ['function_tools.id'], ),
    sa.PrimaryKeyConstraint('agent_id', 'function_id')
    )
    op.create_table('agent_knowledge_mappings',
    sa.Column('agent_profile_id', sa.UUID(), nullable=False),
    sa.Column('knowledge_base_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['agent_profile_id'], ['agent_profiles.id'], ),
    sa.ForeignKeyConstraint(['knowledge_base_id'], ['knowledge_bases.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents',
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('knowledge_base_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('chunk_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['knowledge_base_id'], ['knowledge_bases.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_filename'), 'documents', ['filename'], unique=False)
    op.create_table('sip_agent_mappings',
    sa.Column('sip_trunk_id', sa.UUID(), nullable=False),
    sa.Column('inbound_agent_id', sa.UUID(), nullable=True),
    sa.Column('outbound_agent_id', sa.UUID(), nullable=True),
    sa.Column('dispatch_rule_id', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['inbound_agent_id'], ['agent_profiles.id'], ),
    sa.ForeignKeyConstraint(['outbound_agent_id'], ['agent_profiles.id'], ),
    sa.ForeignKeyConstraint(['sip_trunk_id'], ['sip_trunks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sip_calls',
    sa.Column('call_id', sa.String(), nullable=False),
    sa.Column('room_id', sa.UUID(), nullable=False),
    sa.Column('direction', sa.Enum('INBOUND', 'OUTBOUND', name='sipcalldirection'), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('trunk_id', sa.UUID(), nullable=True),
    sa.Column('agent_id', sa.UUID(), nullable=True),
    sa.Column('answered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('INITIATED', 'RINGING', 'ACTIVE', 'COMPLETED', 'FAILED', name='sipcallstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('call_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_profiles.id'], ),
    sa.ForeignKeyConstraint(['trunk_id'], ['sip_trunks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sip_calls_call_id'), 'sip_calls', ['call_id'], unique=False)
    op.create_index(op.f('ix_sip_calls_phone_number'), 'sip_calls', ['phone_number'], unique=False)
    op.create_index(op.f('ix_sip_calls_room_id'), 'sip_calls', ['room_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sip_calls_room_id'), table_name='sip_calls')
    op.drop_index(op.f('ix_sip_calls_phone_number'), table_name='sip_calls')
    op.drop_index(op.f('ix_sip_calls_call_id'), table_name='sip_calls')
    op.drop_table('sip_calls')
    op.drop_table('sip_agent_mappings')
    op.drop_index(op.f('ix_documents_filename'), table_name='documents')
    op.drop_table('documents')
    op.drop_table('agent_knowledge_mappings')
    op.drop_table('agent_function_mappings')
    op.drop_index(op.f('ix_sip_trunks_phone_number'), table_name='sip_trunks')
    op.drop_index(op.f('ix_sip_trunks_name'), table_name='sip_trunks')
    op.drop_table('sip_trunks')
    op.drop_index(op.f('ix_post_is_deleted'), table_name='post')
    op.drop_index(op.f('ix_post_created_by_user_id'), table_name='post')
    op.drop_table('post')
    op.drop_index(op.f('ix_knowledge_bases_name'), table_name='knowledge_bases')
    op.drop_table('knowledge_bases')
    op.drop_index(op.f('ix_function_tools_name'), table_name='function_tools')
    op.drop_table('function_tools')
    op.drop_index(op.f('ix_agent_profiles_name'), table_name='agent_profiles')
    op.drop_table('agent_profiles')
    op.drop_index(op.f('ix_user_tier_id'), table_name='user')
    op.drop_index(op.f('ix_user_is_deleted'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_rate_limit_tier_id'), table_name='rate_limit')
    op.drop_table('rate_limit')
    op.drop_table('tier')
    op.drop_table('agent_reference_lookup')
    # ### end Alembic commands ###
