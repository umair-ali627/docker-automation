"""Add provider tables and update agent_profiles

Revision ID: 4ce3a1d0277a
Revises: 6da8fbf3a949
Create Date: 2025-08-20 17:25:32.885064

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4ce3a1d0277a'
down_revision: Union[str, None] = '6da8fbf3a949'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('llm_providers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('models', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_llm_providers_provider'), 'llm_providers', ['provider'], unique=True)
    op.create_table('stt_providers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('models', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stt_providers_provider'), 'stt_providers', ['provider'], unique=True)
    op.create_table('tts_providers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('models', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('voices', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tts_providers_provider'), 'tts_providers', ['provider'], unique=True)
    op.add_column('agent_profiles', sa.Column('llm_provider_id', sa.UUID(), nullable=False))
    op.add_column('agent_profiles', sa.Column('tts_provider_id', sa.UUID(), nullable=False))
    op.add_column('agent_profiles', sa.Column('stt_provider_id', sa.UUID(), nullable=False))
    op.create_foreign_key(None, 'agent_profiles', 'tts_providers', ['tts_provider_id'], ['id'])
    op.create_foreign_key(None, 'agent_profiles', 'stt_providers', ['stt_provider_id'], ['id'])
    op.create_foreign_key(None, 'agent_profiles', 'llm_providers', ['llm_provider_id'], ['id'])
    op.drop_column('agent_profiles', 'tts_provider')
    op.drop_column('agent_profiles', 'llm_provider')
    op.drop_column('agent_profiles', 'stt_provider')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('agent_profiles', sa.Column('stt_provider', postgresql.ENUM('DEEPGRAM', 'OPENAI', 'GOOGLE', name='sttprovider'), autoincrement=False, nullable=False))
    op.add_column('agent_profiles', sa.Column('llm_provider', postgresql.ENUM('OPENAI', 'GOOGLE', name='llmprovider'), autoincrement=False, nullable=False))
    op.add_column('agent_profiles', sa.Column('tts_provider', postgresql.ENUM('OPENAI', 'GOOGLE', 'UPLIFT', 'ELEVENLABS', name='ttsprovider'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'agent_profiles', type_='foreignkey')
    op.drop_constraint(None, 'agent_profiles', type_='foreignkey')
    op.drop_constraint(None, 'agent_profiles', type_='foreignkey')
    op.drop_column('agent_profiles', 'stt_provider_id')
    op.drop_column('agent_profiles', 'tts_provider_id')
    op.drop_column('agent_profiles', 'llm_provider_id')
    op.drop_index(op.f('ix_tts_providers_provider'), table_name='tts_providers')
    op.drop_table('tts_providers')
    op.drop_index(op.f('ix_stt_providers_provider'), table_name='stt_providers')
    op.drop_table('stt_providers')
    op.drop_index(op.f('ix_llm_providers_provider'), table_name='llm_providers')
    op.drop_table('llm_providers')
    # ### end Alembic commands ###
