"""Add is_verified to User

Revision ID: 6da8fbf3a949
Revises: 135ab6251787
Create Date: 2025-08-19 03:17:25.519475

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6da8fbf3a949'
down_revision: Union[str, None] = '135ab6251787'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'rate_limit', ['id'])
    op.create_unique_constraint(None, 'tier', ['id'])
    # Step 1: Add column as nullable
    op.add_column('user', sa.Column('is_verified', sa.Boolean(), nullable=True))
    # Step 2: Set default value for existing rows
    op.execute("UPDATE \"user\" SET is_verified = FALSE")
    # Step 3: Alter column to NOT NULL
    op.alter_column('user', 'is_verified', nullable=False)    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'is_verified')
    op.drop_constraint(None, 'tier', type_='unique')
    op.drop_constraint(None, 'rate_limit', type_='unique')
    # ### end Alembic commands ###
